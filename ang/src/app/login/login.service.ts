// src/app/login/services/login.service.ts
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';
import { Login } from './login.model';  // Import the Login model

@Injectable({
  providedIn: 'root'
})
export class LoginService {

  private apiURL = 'https://localhost:44325/api';  // Your API URL

  httpOptions = {
    headers: new HttpHeaders({
      'Content-Type': 'application/json'
    })
  };

  constructor(private httpClient: HttpClient) { }

  // Get all admins
  getAll(): Observable<Login[]> {
    return this.httpClient.get<Login[]>(`${this.apiURL}/login/`)
      .pipe(catchError(this.errorHandler));
  }

  // Create a new admin (AdminId is auto-generated by the database)
  create(login: Login): Observable<Login> {
    return this.httpClient.post<Login>(`${this.apiURL}/logins/`, login, this.httpOptions)
      .pipe(catchError(this.errorHandler));
  }

  // Find admin by ID
  find(id: number): Observable<Login> {
    return this.httpClient.get<Login>(`${this.apiURL}/logins/${id}`)
      .pipe(catchError(this.errorHandler));
  }

  // Update admin details
  update(id: number, login: Login): Observable<Login> {
    return this.httpClient.put<Login>(`${this.apiURL}/login/${id}`, login, this.httpOptions)
      .pipe(catchError(this.errorHandler));
  }

  // Delete an admin
  delete(id: number): Observable<void> {
    return this.httpClient.delete<void>(`${this.apiURL}/login/${id}`, this.httpOptions)
      .pipe(catchError(this.errorHandler));
  }

  // Error handling
  private errorHandler(error: any): Observable<never> {
    let errorMessage = '';
    if (error.error instanceof ErrorEvent) {
      errorMessage = error.error.message;  // client-side error
    } else {
      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;  // server-side error
    }
    return throwError(errorMessage);
  }
}
